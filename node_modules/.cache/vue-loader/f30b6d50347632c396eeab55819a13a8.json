{"remainingRequest":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\src\\components\\item.vue?vue&type=style&index=0&id=186c01a3&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\src\\components\\item.vue","mtime":1620790451000},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\node_modules\\css-loader\\index.js","mtime":1620815329268},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1620815350913},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\node_modules\\postcss-loader\\src\\index.js","mtime":1620815353109},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620815338842},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\bilibili-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1620815350899}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n/* scoped 表示这个样式只在这个组件里面生效 */\n\t.item{\n\t\tcursor: pointer;\n\t\t/* 这里表示的是组件大小 外层的尺寸由外层控制 */\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\t/* transition 事件函数 可以让颜色变化的事件延长到1秒*/\n\t\ttransition: 0.2s;\n\t}\n\t.active{\n\t\tbackground: #628fc2;\n\t}\n\t.item:hover{ /* hover 的变化效果是瞬间变化的 */\n\t\tbackground: #00a6ff;\n\t}\n",{"version":3,"sources":["item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"item.vue","sourceRoot":"src/components","sourcesContent":["<!-- 这是开发的一个组件 -->\n<template>\n\t<div class=\"item\" :class=\"{ active : isActive}\" @click=\"handleClick\"> \n\t<slot></slot><!--插槽 类似于组件传递 -->\n\t</div>\n</template>\n\n<script>\n\texport default{\n\t\t//props表示需要接受的参数 单向数据流\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\treturnParam:\"子组件中的参数data\"\n\t\t\t}\n\t\t},\n\t\tprops:{\n\t\t\t//isActive表示被定义的一个参数 {}里面表示这个参数的一些约束属性\n\t\t\tisActive:{\n\t\t\t\ttype:Boolean,//约束属性的类型为布尔类型 \n\t\t\t\t//required:true,//约束属性是必填\n\t\t\t\tdefault:false//给一个默认的值\n\t\t\t},\n\t\t},\n\t\tmethods:{\n\t\t\thandleClick(){\n\t\t\t\t//抛出自定义事件\n\t\t\t\t//知道发生了点击事件 但是不知道如何处理 应该通知父组件给我传递数据\n\t\t\t\t//如何通知父组件 通过抛出事件方法 \n\t\t\t\t//emit两个参数  第一个是事件的名称 可以随意定义\n\t\t\t\t//\t\t第二个参数是子组件向父组件传递的参数\n\t\t\t\tthis.$emit(\"active\",\"子组件传递参数\");\n\t\t\t\tthis.$emit(\"func\",this.$data.returnParam);\n\t\t\t}\n\t\t}\n\t};\n</script>\n\n<style scoped> \n/* scoped 表示这个样式只在这个组件里面生效 */\n\t.item{\n\t\tcursor: pointer;\n\t\t/* 这里表示的是组件大小 外层的尺寸由外层控制 */\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\t/* transition 事件函数 可以让颜色变化的事件延长到1秒*/\n\t\ttransition: 0.2s;\n\t}\n\t.active{\n\t\tbackground: #628fc2;\n\t}\n\t.item:hover{ /* hover 的变化效果是瞬间变化的 */\n\t\tbackground: #00a6ff;\n\t}\n</style>\n"]}]}